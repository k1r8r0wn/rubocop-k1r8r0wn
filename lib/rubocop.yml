inherit_gem:
  rubocop-k1r8r0wn:
    - lib/rubocop.rspec.yml
    - lib/rubocop.performance.yml

AllCops:
  NewCops: enable
  DisplayCopNames: true
  Exclude:
    - bin/**/*
    - node_modules/**/*
    - vendor/**/*
    - tmp/**/*

###################################
# Layout
###################################

Layout/ClassStructure:
  Enabled: true

Layout/EmptyLineAfterGuardClause:
  Enabled: false

Layout/EmptyLinesAroundArguments:
  Enabled: false # Conflicts with memery / memoist, try to enable after next rubocop upgrade

Layout/FirstArrayElementIndentation:
  # Good
  # foo([
  #   :first,
  #   :second,
  # ])
  # Bad
  # foo([
  #       :first,
  #       :second
  #     ])
  EnforcedStyle: consistent

Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

Layout/LineLength:
  Max: 100
  AllowHeredoc: false
  AllowURI: false
  Exclude:
    - Gemfile

Layout/MultilineMethodCallIndentation:
  # We don't like this cop
  Enabled: false

Layout/MultilineOperationIndentation:
  Enabled: false

Layout/ParameterAlignment:
  Enabled: true

Layout/SpaceBeforeBrackets:
  Enabled: false

Layout/SpaceInLambdaLiteral:
  EnforcedStyle: require_space

Layout/SpaceInsideArrayLiteralBrackets:
  Enabled: false

###################################
# Lint
###################################

Lint/AmbiguousBlockAssociation:
  Enabled: false # `scope :name, -> (param) { ... }` is a valid syntax

Lint/AmbiguousOperator:
  Enabled: false

Lint/EmptyWhen:
  # Good:
  # case x
  # when :foo
  #   # return nil
  # when :bar
  #   :bar
  # else
  #   :baz
  # end
  Enabled: false

Lint/NonLocalExitFromIterator:
  Enabled: false

Lint/RaiseException:
  Enabled: true

Lint/RescueType:
  Enabled: true

Lint/ShadowingOuterLocalVariable:
  Enabled: false

Lint/ScriptPermission:
  Enabled: true # Checks +x on scripts

Lint/StructNewOverride:
  Enabled: true

Lint/SuppressedException:
  Enabled: false

###################################
# Metrics
###################################

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Max: 20

Metrics/PerceivedComplexity:
  Enabled: false

###################################
# Naming
###################################

Naming/RescuedExceptionsVariableName:
  PreferredName: error

Naming/AccessorMethodName:
  Enabled: false # This cop assumes every method is accessor

Naming/PredicateName:
  # `has_` is generally good
  ForbiddenPrefixes:
    - is_

###################################
# Security
###################################

Security/YAMLLoad:
  Enabled: false

###################################
# Style
###################################

Style/AsciiComments:
  Enabled: false

Style/AndOr:
  Enabled: false # `do_something and return`

Style/ClassAndModuleChildren:
  Enabled: false  # Enable it in non-rails projects with EnforcedStyle you prefer

Style/CommentAnnotation:
  Enabled: false

Style/ConditionalAssignment:
  Enabled: false

Style/Dir:
  Enabled: true

Style/Documentation:
  Enabled: false

Style/DoubleNegation:
  Enabled: false # Always return booleans in predicates

Style/EmptyCaseCondition:
  Enabled: false

Style/EmptyElse:
  Enabled: false

Style/Encoding:
  Enabled: false

Style/FormatStringToken:
  # Bad
  # [7] pry(main)> format "%{foo}", foo: 123
  # => "123"
  # Good
  # [8] pry(main)> format "%<foo>s", foo: 123
  # => "123"
  # Also good
  # [9] pry(main)> format "%<foo>f", foo: 123
  # => "123.000000"
  Enabled: true

Style/IfUnlessModifier:
  # Doesn't work well with Metrics/LineLength
  Enabled: false

Style/GuardClause:
  Enabled: false

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

Style/LambdaCall:
  Enabled: false

Style/ModuleFunction:
  Enabled: false

Style/MultilineTernaryOperator:
  Enabled: false

Style/MultipleComparison:
  # Bad
  # if foo == 1 || foo == 2
  # Good
  # [1, 2].include?(foo)
  # With activesupport, this is better
  # foo.in? [1, 2]
  Enabled: true

Style/NumericLiterals:
  Description: 'Use indent in groups of 3 unlesss you meet project-specific rule'
  Enabled: false

Style/ParallelAssignment:
  Enabled: false

Style/PerlBackrefs:
  # Disable localy if realy neeeded
  Enabled: true

Style/RaiseArgs:
  Description: "Use `raise, ErrorClass` in all cases but not when you need ErrorClass constructor"
  Enabled: false

Style/RedundantConditional:
  Enabled: true

Style/RegexpLiteral:
  EnforcedStyle: mixed
  Enabled: true

Style/RescueModifier:
  Enabled: false

Style/RescueStandardError:
  Enabled: false # Forced `rescue` over `rescue StandardError`

Style/StringLiterals:
  EnforcedStyle: double_quotes
  ConsistentQuotesInMultiline: true

Style/SignalException:
  EnforcedStyle: only_raise

Style/SingleLineBlockParams:
  Enabled: false

Style/StringLiteralsInInterpolation:
  Enabled: false

Style/SymbolArray:
  # Be consistent
  # Good, array of symbols expected
  # :foo.in? &i[foo bar]
  # Good, link_to receives array of generic objects
  # link_to [:admin, :users]
  # Good, if second is not a symbol array, first is not expected to be
  # [
  #   [:foo, :bar]
  #   [:boo, :bar, baz: true]
  # ]
  Enabled: false

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInArrayLiteral:
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

Style/TrivialAccessors:
  AllowPredicates: true
  Enabled: false
